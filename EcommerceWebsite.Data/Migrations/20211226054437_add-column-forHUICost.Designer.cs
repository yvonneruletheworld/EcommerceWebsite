// <auto-generated />
using System;
using EcommerceWebsite.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EcommerceWebsite.Data.Migrations
{
    [DbContext(typeof(EcomWebDbContext))]
    [Migration("20211226054437_add-column-forHUICost")]
    partial class addcolumnforHUICost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.BangGiaSanPham", b =>
                {
                    b.Property<string>("MaDinhLuong")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<decimal>("GiaMoi")
                        .HasColumnType("money");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDinhLuong", "NgayTao");

                    b.ToTable("BANGGIASANPHAM");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.Banner", b =>
                {
                    b.Property<string>("MaBanner")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhAnhBanner")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBanner");

                    b.ToTable("BANNER");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.BinhLuan", b =>
                {
                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("NguoiTao", "NgayTao", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("BINHLUANSANPHAM");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.BoPhan", b =>
                {
                    b.Property<string>("MaBoPhan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenBoPhan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaBoPhan");

                    b.ToTable("BOPHAN");

                    b.HasData(
                        new
                        {
                            MaBoPhan = "BP01",
                            TenBoPhan = "Thu ngân"
                        },
                        new
                        {
                            MaBoPhan = "BP02",
                            TenBoPhan = "Nhân viên bán hàng"
                        },
                        new
                        {
                            MaBoPhan = "BP03",
                            TenBoPhan = "Nhân viên Kho"
                        },
                        new
                        {
                            MaBoPhan = "BP04",
                            TenBoPhan = "Nhân viên kĩ thuật"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoaDonId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaHUI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("money");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ProductId", "HoaDonId", "MaHUI");

                    b.HasIndex("HoaDonId");

                    b.ToTable("CHITIETHOADON");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.ChiTietNhapSanPham", b =>
                {
                    b.Property<string>("MaNhap")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("money");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("money");

                    b.HasKey("MaNhap", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("CHITIETNHAPSANPHAM");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DanhGiaSanPham", b =>
                {
                    b.Property<string>("MaDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HinhAnhDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaSanPham")
                        .IsUnique()
                        .HasFilter("[MaSanPham] IS NOT NULL");

                    b.ToTable("DANHGIASANPHAM");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DanhMuc", b =>
                {
                    b.Property<string>("MaDanhMuc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<bool>("HienThiTrangHome")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DANHMUC");

                    b.HasData(
                        new
                        {
                            MaDanhMuc = "DM01",
                            DaXoa = false,
                            HienThiTrangHome = true,
                            HinhAnh = "https://i.ibb.co/NSBhk4f/E5wft-Ni-Vk-AQHbh-S.jpg",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 50, DateTimeKind.Utc).AddTicks(9671),
                            NguoiTao = "admin",
                            Status = 1,
                            TenDanhMuc = "Điện thoại"
                        },
                        new
                        {
                            MaDanhMuc = "DM04",
                            DaXoa = false,
                            HienThiTrangHome = true,
                            HinhAnh = "https://i.ibb.co/QHfCkK1/28-11-2020-0-16065566805fc21c0855b09-0.jpg",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 51, DateTimeKind.Utc).AddTicks(610),
                            NguoiTao = "admin",
                            ParentId = "DM01",
                            Status = 1,
                            TenDanhMuc = "Phụ kiện"
                        },
                        new
                        {
                            MaDanhMuc = "DM03",
                            DaXoa = false,
                            HienThiTrangHome = true,
                            HinhAnh = "https://i.ibb.co/3fWbd3c/Dong-ho-haylou-h3.jpg",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 51, DateTimeKind.Utc).AddTicks(663),
                            NguoiTao = "admin",
                            ParentId = "DM01",
                            Status = 1,
                            TenDanhMuc = "Đồng hồ"
                        },
                        new
                        {
                            MaDanhMuc = "DM02",
                            DaXoa = false,
                            HienThiTrangHome = true,
                            HinhAnh = "https://i.ibb.co/sHxtWdf/Song-toi-gian-may-tinh-1.jpg",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 51, DateTimeKind.Utc).AddTicks(667),
                            NguoiTao = "admin",
                            ParentId = "DM01",
                            Status = 1,
                            TenDanhMuc = "PC, Máy in"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DanhMucThuocTinh", b =>
                {
                    b.Property<string>("MaThuocTinh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaDanhMuc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaThuocTinh", "MaDanhMuc");

                    b.ToTable("DANHMUCTHUOCTINH");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DiaChiKhachHang", b =>
                {
                    b.Property<string>("MaDiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hoten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiDiaChi")
                        .HasColumnType("int");

                    b.Property<bool>("MacDinh")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ThanhPho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDiaChi", "MaKhachHang");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DIACHIKHACHHANG");

                    b.HasData(
                        new
                        {
                            MaDiaChi = "DC01",
                            MaKhachHang = "KH01",
                            DaXoa = true,
                            DiaChi = "Hẻm 1 Bùi Xuân Phái, Tây Thạnh, Tân Phú, HCM",
                            LoaiDiaChi = 0,
                            MacDinh = false,
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 67, DateTimeKind.Local).AddTicks(8705),
                            SDT = "0376437459"
                        },
                        new
                        {
                            MaDiaChi = "DC02",
                            MaKhachHang = "KH01",
                            DaXoa = true,
                            DiaChi = "140 Lê Trọng Tấn,",
                            LoaiDiaChi = 0,
                            MacDinh = false,
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 67, DateTimeKind.Local).AddTicks(8752),
                            SDT = "0376437459"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DinhLuong", b =>
                {
                    b.Property<string>("MaDinhLuong")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaThuocTinh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaDinhLuong");

                    b.HasIndex("MaSanPham");

                    b.HasIndex("MaThuocTinh");

                    b.ToTable("DINHLUONG");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.GiaoHang", b =>
                {
                    b.Property<string>("MaGiaoHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayDuKienGiao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTiepNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiHienTai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGiaoHang");

                    b.HasIndex("MaHoaDon")
                        .IsUnique()
                        .HasFilter("[MaHoaDon] IS NOT NULL");

                    b.ToTable("GIAOHANG");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.HUICost", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComboCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DaBan")
                        .HasColumnType("int");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("LuotTruyCap")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("ThucBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Utility")
                        .HasColumnType("int");

                    b.HasKey("MaSanPham", "NgayTao", "ComboCode");

                    b.ToTable("HUICosts");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MaDiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhuyenMai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhiGiaoHang")
                        .HasColumnType("money");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("money");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongCong")
                        .HasColumnType("money");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaKhuyenMai");

                    b.HasIndex("MaDiaChi", "MaKhachHang");

                    b.ToTable("HOADON");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KHACHHANG");

                    b.HasData(
                        new
                        {
                            MaKhachHang = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            DaXoa = false,
                            GioiTinh = false,
                            HoTen = "Yvonne Tran",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaKhachHang = "KH01",
                            DaXoa = false,
                            GioiTinh = false,
                            HoTen = "Phạm Thị Vi",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaKhachHang = "KH02",
                            DaXoa = false,
                            GioiTinh = false,
                            HoTen = "Danh Vũ",
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.KhuyenMai", b =>
                {
                    b.Property<string>("MaKhuyenMai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<decimal>("DieuKienKM")
                        .HasColumnType("money");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PhanTram")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhuyenMai");

                    b.ToTable("KHUYENMAI");

                    b.HasData(
                        new
                        {
                            MaKhuyenMai = "KM01",
                            DaXoa = true,
                            DieuKienKM = 0m,
                            HinhAnh = "https://cdn.tgdd.vn/2021/11/banner/830-300(1)-830x300.png",
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 68, DateTimeKind.Local).AddTicks(55),
                            PhanTram = 35f,
                            TenKhuyenMai = "Đồng hồ thời trang giảm 35%"
                        },
                        new
                        {
                            MaKhuyenMai = "KM02",
                            DaXoa = true,
                            DieuKienKM = 0m,
                            HinhAnh = "https://cdn.tgdd.vn/2021/10/banner/830-300-830x300-29.png",
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 68, DateTimeKind.Local).AddTicks(115),
                            PhanTram = 15f,
                            TenKhuyenMai = "Apple Watch S6 giảm đến 15%"
                        },
                        new
                        {
                            MaKhuyenMai = "KM03",
                            DaXoa = true,
                            DieuKienKM = 0m,
                            HinhAnh = "https://cdn.tgdd.vn/2021/11/banner/big11-pk-830-300-830x300.png",
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 68, DateTimeKind.Local).AddTicks(119),
                            PhanTram = 50f,
                            TenKhuyenMai = "Phụ kiện giảm đến 50%"
                        },
                        new
                        {
                            MaKhuyenMai = "KM04",
                            DaXoa = true,
                            DieuKienKM = 0m,
                            HinhAnh = "https://cdn.tgdd.vn/2021/11/banner/830-300-830x300-6.png",
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 68, DateTimeKind.Local).AddTicks(130),
                            PhanTram = 25f,
                            TenKhuyenMai = "Apple Watch S6 giảm đến 25%"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhaCungCap", b =>
                {
                    b.Property<string>("MaNhaCungCap")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TenNhaCungCap")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaNhaCungCap");

                    b.ToTable("NHACUNGCAP");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhanHieu", b =>
                {
                    b.Property<string>("MaHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHang");

                    b.ToTable("NHANHIEU");

                    b.HasData(
                        new
                        {
                            MaHang = "MH01",
                            TenHang = "IPHONE"
                        },
                        new
                        {
                            MaHang = "MH02",
                            TenHang = "SAMSUNG"
                        },
                        new
                        {
                            MaHang = "MH03",
                            TenHang = "OPPO"
                        },
                        new
                        {
                            MaHang = "MH04",
                            TenHang = "VIVO"
                        },
                        new
                        {
                            MaHang = "MH05",
                            TenHang = "XIAOMI"
                        },
                        new
                        {
                            MaHang = "MH06",
                            TenHang = "REALME"
                        },
                        new
                        {
                            MaHang = "MH07",
                            TenHang = "VSMAST"
                        },
                        new
                        {
                            MaHang = "MH08",
                            TenHang = "NOKIA"
                        },
                        new
                        {
                            MaHang = "MH09",
                            TenHang = "HYDRUS"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaBoPhan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaBoPhan");

                    b.ToTable("NHANVIEN");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "NV01",
                            DaXoa = false,
                            DiaChi = "Quảng Ngãi",
                            Mail = "phamthivi459@gmail.com",
                            NgaySinh = new DateTime(2000, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 67, DateTimeKind.Local).AddTicks(1609),
                            SDT = "0376437459",
                            Status = 1,
                            TenNhanVien = "Phạm Thị Vi",
                            Username = "PhamTVi"
                        },
                        new
                        {
                            MaNhanVien = "NV02",
                            DaXoa = false,
                            DiaChi = "Quảng Ngãi",
                            Mail = "danhvu@gmail.com",
                            NgaySinh = new DateTime(2000, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 67, DateTimeKind.Local).AddTicks(6925),
                            SDT = "123456789",
                            Status = 1,
                            TenNhanVien = "Lê Danh Vũ",
                            Username = "DanhVu"
                        },
                        new
                        {
                            MaNhanVien = "NV03",
                            DaXoa = false,
                            DiaChi = "Quảng Ngãi",
                            Mail = "havy@gmail.com",
                            NgaySinh = new DateTime(2000, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2021, 12, 26, 12, 44, 36, 67, DateTimeKind.Local).AddTicks(6946),
                            SDT = "123456789",
                            Status = 1,
                            TenNhanVien = "Trần Nhật Hạ Vy",
                            Username = "haVy"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.PhieuNhap", b =>
                {
                    b.Property<string>("MaPhieuNhap")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<string>("MaNhaCungCap")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("money");

                    b.HasKey("MaPhieuNhap");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PHIEUNHAP");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.SanPham", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<decimal>("GiaHUI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaLoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Utility")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaHang");

                    b.HasIndex("MaLoaiSanPham");

                    b.ToTable("SANPHAM");

                    b.HasData(
                        new
                        {
                            MaSanPham = "SP01",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/T2Ywg8N/Samsung-galaxy-z-fold-3-silver-gc-org.jpg",
                            MaHang = "MH02",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1318),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Samsung Galaxy Z Fold3 5G 512GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP02",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/CPq556s/Samsung-galaxy-z-flip-3-kem-1-org.jpg",
                            MaHang = "MH02",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1903),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Samsung Galaxy Z Flip3 5G 128GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP03",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/RNz8N1G/Iphone-12-64-GB.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1934),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "iPhone 12 64GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP04",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/JQNGCzb/Iphone-12-pro-max-128-GB.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1937),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "iPhone 12 Pro Max 128GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP05",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/vsLZ8km/Iphone-12-mini-64-GB.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1941),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "iPhone 12 mini 64GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP06",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/hZS5MJ3/Iphone-11-64-GB.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1944),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "iPhone 11 64GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP07",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/2v36jLV/iphone-XR-64-GB.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1948),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "iPhone XR 64GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP08",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/1rp5mbM/Oppo-reno6-z-5g-bac-1-org.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1951),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO Reno6 Z 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP09",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/zRQB86R/Oppo-a74-xanh-duong-1-org.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1958),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO A74",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP010",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/ydCdghQ/Oppo-reno6-pro-5g-xanh-duong-1.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1962),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO Reno6 Pro 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP011",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/pw2Kqcp/Oppo-find-x3-pro-den-1-org.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1965),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO Find X3 Pro 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP012",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/zbPGb0s/Oppo-reno6-den-1-org.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1968),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO Reno6 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP013",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/55BgPLp/Oppo-reno5-5g-bac-1-org.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1972),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO Reno5 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP014",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/94LDnqK/Oppo-reno4-pro-trang-1-org.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1975),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO Reno4 Pro",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP015",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/vVV9xVR/Oppo-a16-1-2.jpg",
                            MaHang = "MH03",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1978),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO A16",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP016",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/XWGXkDf/Vivo-y21-1-2.jpg",
                            MaHang = "MH04",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1981),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "OPPO A16",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP017",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/NrnVRWj/Vivo-x70-pro-black-gc-org.jpg",
                            MaHang = "MH04",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1986),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Vivo X70 Pro 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP018",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/S7Xy2TM/Vivo-v21-5g-tim-hong-1-3-org.jpg",
                            MaHang = "MH04",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1996),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Vivo V21 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP019",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/TLdWMdd/Vivo-v20-2021-xanh-hong-1-org.jpg",
                            MaHang = "MH04",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(1999),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Vivo V20 (2021)",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP020",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/swGN954/Vivo-y72-5g-xanh-hong-1-1-org.jpg",
                            MaHang = "MH04",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2002),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Vivo Y72 5G",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP021",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/swGN954/Vivo-y72-5g-xanh-hong-1-1-org.jpg",
                            MaHang = "MH04",
                            MaLoaiSanPham = "DM01",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2005),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Vivo Y21s 6GB",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP022",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/k5rV9Vg/Samsung-galaxy-watch-4-44mm-den-1-org.jpg",
                            MaHang = "MH02",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2009),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Samsung Galaxy Watch 4 44mm",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP023",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/bHRpNch/Apple-watch-s6-40mm-vien-nhom-day-cao-su-xanh-cont-1-org.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2013),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Apple Watch S6 40mm viền nhôm dây cao su",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP024",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/rcfS9Nm/Untitled-1-org.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2016),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Apple Watch SE 40mm viền nhôm dây cao su",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP025",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/9yR299t/Samsung-galaxy-watch-3-45mm-bac-2-org.jpg",
                            MaHang = "MH02",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2021),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Samsung Galaxy Watch 3 45mm viền thép bạc dây da",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP026",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/ydJ9XY5/Samsung-galaxy-watch-4-44mm-den-1-org.jpg",
                            MaHang = "MH02",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2024),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Samsung Galaxy Watch 4 44mm ",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP027",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/2YttfZB/Apple-watch-s6-lte-40mm-vien-thep-day-thep-vang-cont-1-org.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2027),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Apple Watch S6 LTE 40mm viền thép dây thép ",
                            Utility = 0m
                        },
                        new
                        {
                            MaSanPham = "SP028",
                            DaXoa = false,
                            GiaHUI = 0m,
                            HinhAnh = "https://i.ibb.co/ZW5Wqpk/Apple-watch-s7-45mm-gps-do-1.jpg",
                            MaHang = "MH01",
                            MaLoaiSanPham = "DM03",
                            NgayTao = new DateTime(2021, 12, 26, 5, 44, 36, 52, DateTimeKind.Utc).AddTicks(2030),
                            NguoiTao = "admin",
                            SoLuongTon = 1,
                            Status = 1,
                            TenSanPham = "Apple Watch Series 7 GPS 45mm ",
                            Utility = 0m
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.SanPhamYeuThich", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaKhachHang", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("SANPHAMYEUTHICH");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.ThuocTinh", b =>
                {
                    b.Property<string>("MaThuocTinh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThuocTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaThuocTinh");

                    b.ToTable("THUOCTINH");

                    b.HasData(
                        new
                        {
                            MaThuocTinh = "TT01",
                            TenThuocTinh = "Màn hình"
                        },
                        new
                        {
                            MaThuocTinh = "TT02",
                            TenThuocTinh = "Hệ điều hành"
                        },
                        new
                        {
                            MaThuocTinh = "TT03",
                            TenThuocTinh = "Camera sau"
                        },
                        new
                        {
                            MaThuocTinh = "TT04",
                            TenThuocTinh = "Camera trước"
                        },
                        new
                        {
                            MaThuocTinh = "TT05",
                            TenThuocTinh = "Chip"
                        },
                        new
                        {
                            MaThuocTinh = "TT06",
                            TenThuocTinh = "RAM"
                        },
                        new
                        {
                            MaThuocTinh = "TT07",
                            TenThuocTinh = "Bộ nhớ trong"
                        },
                        new
                        {
                            MaThuocTinh = "TT08",
                            TenThuocTinh = "SIM"
                        },
                        new
                        {
                            MaThuocTinh = "TT09",
                            TenThuocTinh = "Pin, Sạc"
                        },
                        new
                        {
                            MaThuocTinh = "TT010",
                            TenThuocTinh = "Trọng lượng Pin"
                        },
                        new
                        {
                            MaThuocTinh = "TT011",
                            TenThuocTinh = "Kết nối với hệ điều hành"
                        },
                        new
                        {
                            MaThuocTinh = "TT012",
                            TenThuocTinh = "Mặt"
                        },
                        new
                        {
                            MaThuocTinh = "TT013",
                            TenThuocTinh = "Tính năng cho sức khỏe"
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.TinhTrangGiaoHang", b =>
                {
                    b.Property<string>("MaGiaoHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaTinhTrangGiaoHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySuaCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSuaCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.HasKey("MaGiaoHang", "MaTinhTrangGiaoHang");

                    b.ToTable("TINHTRANGIAOHANG");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            RoleId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Identity.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdAuto")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModificationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("IdAuto")
                        .IsUnique()
                        .HasFilter("[IdAuto] IS NOT NULL");

                    b.HasDiscriminator().HasValue("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c23223e-8118-4266-a911-8da2195eb0f0",
                            Email = "yvonnetran.work@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "yvonnetran.work@gmail.com",
                            NormalizedUserName = "havyclient1",
                            PasswordHash = "AQAAAAEAACcQAAAAELaH3a1KGSzaj5xYeIqHqPXrvPsdPdtPargKy6qdAx5umhl08zlEhaV2wTqEZzmtkQ==",
                            PhoneNumber = "0905187524",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "havyclient1",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Status = 1
                        },
                        new
                        {
                            Id = "04052000",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a46b9a47-0d75-4805-8454-ae7ab4074306",
                            Email = "phamthivi459@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "phamthivi459@gmail.com",
                            NormalizedUserName = "phamTVi0405",
                            PasswordHash = "AQAAAAEAACcQAAAAEJM34RyVi839P1Fh96ioDsvROKz7pnwjGiO0/J2bKSDlopYCQWjM7c1+KdH0FGMxrw==",
                            PhoneNumber = "0376437459",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "phamTVi0405",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Status = 1
                        },
                        new
                        {
                            Id = "123456789",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ce3751e7-44c5-45e3-a96d-1b1469875691",
                            Email = "danhVu@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "danhVu@gmail.com",
                            NormalizedUserName = "danhVu",
                            PasswordHash = "AQAAAAEAACcQAAAAEPfRmx35M0FeCR7AsONzsqJZL5mK2Riz+omdU1clcw63CEfQA+M+ocFGbivgfR3nlw==",
                            PhoneNumber = "0376437459",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "danhVu",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Status = 1
                        });
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.BangGiaSanPham", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.DinhLuong", "DinhLuong")
                        .WithMany("BangGiaSanPhams")
                        .HasForeignKey("MaDinhLuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DinhLuong");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.BinhLuan", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPham")
                        .WithMany("BinhLuans")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.HoaDon", "HoaDons")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPhams")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDons");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.ChiTietNhapSanPham", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.PhieuNhap", "PhieuNhapEntity")
                        .WithMany("ChiTietNhapSanPhams")
                        .HasForeignKey("MaNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietNhapSanPhams")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuNhapEntity");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DanhGiaSanPham", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPham")
                        .WithOne("DanhGiaSanPham")
                        .HasForeignKey("EcommerceWebsite.Data.Entities.DanhGiaSanPham", "MaSanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DiaChiKhachHang", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("DiaChiKhachHangs")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DinhLuong", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPham")
                        .WithMany("DinhLuongs")
                        .HasForeignKey("MaSanPham");

                    b.HasOne("EcommerceWebsite.Data.Entities.ThuocTinh", "ThuocTinh")
                        .WithMany("DinhLuongs")
                        .HasForeignKey("MaThuocTinh");

                    b.Navigation("SanPham");

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.GiaoHang", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.HoaDon", "HoaDon")
                        .WithOne("GiaoHang")
                        .HasForeignKey("EcommerceWebsite.Data.Entities.GiaoHang", "MaHoaDon");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.HUICost", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPhams")
                        .WithMany()
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.HoaDon", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhachHang");

                    b.HasOne("EcommerceWebsite.Data.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhuyenMai");

                    b.HasOne("EcommerceWebsite.Data.Entities.DiaChiKhachHang", "DiaChiKhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaDiaChi", "MaKhachHang");

                    b.Navigation("DiaChiKhachHang");

                    b.Navigation("KhachHang");

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhanVien", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.BoPhan", "BoPhan")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaBoPhan");

                    b.Navigation("BoPhan");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.PhieuNhap", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaNhaCungCap");

                    b.HasOne("EcommerceWebsite.Data.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.SanPham", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.NhanHieu", "NhanHieuEnti")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebsite.Data.Entities.DanhMuc", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLoaiSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("NhanHieuEnti");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.SanPhamYeuThich", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("SanPhamYeus")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebsite.Data.Entities.SanPham", "SanPham")
                        .WithMany("SanPhamYeus")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.TinhTrangGiaoHang", b =>
                {
                    b.HasOne("EcommerceWebsite.Data.Entities.GiaoHang", "GiaoHang")
                        .WithMany("TinhTrangGiaoHangs")
                        .HasForeignKey("MaGiaoHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiaoHang");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.BoPhan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DanhMuc", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DiaChiKhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.DinhLuong", b =>
                {
                    b.Navigation("BangGiaSanPhams");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.GiaoHang", b =>
                {
                    b.Navigation("TinhTrangGiaoHangs");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("GiaoHang");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.KhachHang", b =>
                {
                    b.Navigation("DiaChiKhachHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("SanPhamYeus");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.KhuyenMai", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhaps");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhanHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.NhanVien", b =>
                {
                    b.Navigation("PhieuNhaps");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietNhapSanPhams");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.SanPham", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietNhapSanPhams");

                    b.Navigation("DanhGiaSanPham");

                    b.Navigation("DinhLuongs");

                    b.Navigation("SanPhamYeus");
                });

            modelBuilder.Entity("EcommerceWebsite.Data.Entities.ThuocTinh", b =>
                {
                    b.Navigation("DinhLuongs");
                });
#pragma warning restore 612, 618
        }
    }
}
