@using EcommerceWebsite.Utilities.ViewModel
@model DoanhThuVM
@{
    var sanPham = Model.SanPham;
    var listNhapBan = Model.ListSanPhamNhapVaBan;
    var listDinhLuong = Model.listDinhLuong;
}

<div class="pcoded-content">
    <!-- [ breadcrumb ] start -->
    <div class="page-header">
        <div class="page-block">
            <div class="row align-items-center">
                <div class="col-md-12">
                    <div class="page-header-title">
                        <h5 class="m-b-10">@*@sanPham.TenSanPham*@</h5>
                    </div>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Danh sách sản phẩm </a></li>
                        <li class="breadcrumb-item"><a href="#!">Chi tiết</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- [ breadcrumb ] end -->
    <!-- [ Main Content ] start -->
    <div class="row">
        <div class="col-md-12">
            <div class="card" style="padding-left: 50px; padding-right: 50px">
                <h5 class="mt-5">Thông tin sản phẩm</h5>
                <hr>
                <form class="needs-validation" novalidate>
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            @*<label class="form-label" asp-for="@SanPham.MaSanPham">ID</label>
                                @Html.EditorFor(model => model.SanPham.MaSanPham ,new { htmlAttributes = new { @class = "form-control", @placeholder = "ID"  } })*@
                            @*<input type="text" class="form-control"  placeholder="First name" value="Mark" required>*@
                            <label class="form-label">Mã sản phẩm</label>
                            <input type="text" class="form-control" readonly placeholder="First name" value="Mark" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            @*<label class="form-label" asp-for="SanPham.TenSanPham">Tên Sản Phẩm</label>
                                @Html.EditorFor(model => model.SanPham.MaSanPham, new { htmlAttributes = new { @class = "form-control", @placeholder = "ID",  } })*@
                            <label class="form-label">Tên sản phẩm</label>
                            <input type="text" class="form-control" placeholder="First name" value="Mark" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label" for="validationCustom02">Số lượng tồn</label>
                            <input type="text" class="form-control" id="validationCustom02" placeholder="Last name" value="Otto" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label" for="validationCustom02">Hình ảnh</label>
                            <input type="text" class="form-control" id="validationCustom02" placeholder="Last name" value="Otto" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label" for="validationCustom02">Hãng sản phẩm</label>
                            <input type="text" class="form-control" id="validationCustom02" placeholder="Last name" value="Otto" required>
                        </div>
                       
                    </div>
                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
                            <label class="form-check-label" for="invalidCheck">Agree to terms and conditions</label>
                            <div class="invalid-feedback">
                                You must agree before submitting.
                            </div>
                        </div>
                    </div>
                    <button class="btn  btn-primary" type="submit">Submit form</button>
                    <br />
                </form>



            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-sm-8">
            <h5 class="mb-3">ĐỊNH LƯỢNG SẢN PHẨM</h5>
            <hr>
            <div class="col-xl-12">
                <div class="card">
                    <div class="card-body table-border-style">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Thuộc Tính</th>
                                        <th>Giá Trị</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in listDinhLuong)
                                    {
                                        <tr>

                                            <td>@item.TenThuocTinh</td>
                                            <td><input type="text" class="form-control" /></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>